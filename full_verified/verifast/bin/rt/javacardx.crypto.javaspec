package javacardx.crypto;

import javacard.security.Key;

abstract class Cipher {
    public static Cipher getInstance(byte algorithm, boolean externalAccess);
    //@ requires true;
    //@ ensures result != null;
    
    public abstract void init(Key theKey, byte theMode);
    //@ requires theKey != null;
    //@ ensures true;
    
    public abstract short doFinal(byte[] inBuff, short inOffset, short inLength, byte[] outBuff, short outOffset);
    //@ requires inBuff != null &*& array_slice(inBuff, 0, inBuff.length, ?inEl) &*& outBuff != null &*& array_slice(outBuff, 0, outBuff.length, _) &*& inOffset >= 0 &*& inLength >= 0 &*& inOffset + inLength <= inBuff.length &*& outOffset >= 0 &*& outOffset <= outBuff.length;
    //@ ensures array_slice(inBuff, 0, inBuff.length, inEl) &*& array_slice(outBuff, 0, outBuff.length, _);

    public static final byte ALG_RSA_NOPAD = 12;
    public static final byte MODE_ENCRYPT = 2;
    public static final byte MODE_DECRYPT = 1;
}