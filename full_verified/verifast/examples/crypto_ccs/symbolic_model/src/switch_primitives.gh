#ifndef SWITCH_PRIMITIVES_GH
#define SWITCH_PRIMITIVES_GH


#define SWITCH_CRYPTO_PRIMITIVES(ITEM, DUMMY, DEPTH) \
  assert item(ITEM, ?item_##DUMMY, _) &*& \
  SWITCH_CRYPTO_PRIMITIVES_##DEPTH(item_##DUMMY) \


#define SWITCH_CRYPTO_PRIMITIVES_DOWN_I(INDUCTIVE, LEVEL, NESTED) \
  switch (INDUCTIVE) \
  { \
    case data_item(d_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case pair_item(f_dummy##LEVEL, s_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case nonce_item(p_dummy##LEVEL, c_dummy##LEVEL, inc_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case public_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case private_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case hmac_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_encrypted_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL, ent_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_1(INDUCTIVE) \
  SWITCH_CRYPTO_PRIMITIVES_DOWN_I(INDUCTIVE, I, I) \


#define SWITCH_CRYPTO_PRIMITIVES_UP_I(INDUCTIVE) \
  INDUCTIVE == INDUCTIVE \


#define SWITCH_CRYPTO_PRIMITIVES_2(INDUCTIVE) \
  SWITCH_CRYPTO_PRIMITIVES_DOWN_II(INDUCTIVE, I, I) \


#define SWITCH_CRYPTO_PRIMITIVES_DOWN_II(INDUCTIVE, LEVEL, NESTED) \
  switch (INDUCTIVE) \
  { \
    case data_item(d_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case pair_item(first##NESTED, second##NESTED): return \
      SWITCH_CRYPTO_PRIMITIVES_DOWN_I(second##NESTED, LEVEL ## I, NESTED ## I); \
    case nonce_item(s_dummy##LEVEL, c_dummy##LEVEL, inc_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case public_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case private_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case hmac_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_encrypted_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL, ent##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_UP_II(INDUCTIVE) \
  switch (firstI) \
  { \
    case data_item(d_ddummyII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_I(INDUCTIVE); \
    case pair_item(f_ddummyII, s_ddummyII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_I(INDUCTIVE); \
    case nonce_item(s_ddummyII, c_ddummyII, inc_ddummyII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_I(INDUCTIVE); \
    case symmetric_key_item(p_ddummyII, c_ddummyII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_I(INDUCTIVE); \
    case public_key_item(p_ddummyII, c_ddummyII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_I(INDUCTIVE); \
    case private_key_item(p_ddummyII, c_ddummyII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_I(INDUCTIVE); \
    case hmac_item(pl_dummy_II, cl_dummy_II, pay_ddummyII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_I(INDUCTIVE); \
    case symmetric_encrypted_item(pl_dummy_II, cl_dummy_II, pay_ddummyII, entII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_I(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_3(INDUCTIVE) \
  SWITCH_CRYPTO_PRIMITIVES_DOWN_III(INDUCTIVE, I, I) \


#define SWITCH_CRYPTO_PRIMITIVES_DOWN_III(INDUCTIVE, LEVEL, NESTED) \
  switch (INDUCTIVE) \
  { \
    case data_item(d_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case pair_item(first##NESTED, second##NESTED): return \
      SWITCH_CRYPTO_PRIMITIVES_DOWN_II(second##NESTED, LEVEL ## I, NESTED ## I); \
    case nonce_item(s_dummy##LEVEL, c_dummy##LEVEL, inc_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case public_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case private_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case hmac_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_encrypted_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL, ent##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_UP_III(INDUCTIVE) \
  switch (firstII) \
  { \
    case data_item(d_ddummyIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_II(INDUCTIVE); \
    case pair_item(f_ddummyIII, s_ddummyIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_II(INDUCTIVE); \
    case nonce_item(s_ddummyIII, c_ddummyIII, inc_ddummyIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_II(INDUCTIVE); \
    case symmetric_key_item(p_ddummyIII, c_ddummyIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_II(INDUCTIVE); \
    case public_key_item(p_ddummyIII, c_ddummyIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_II(INDUCTIVE); \
    case private_key_item(p_ddummyIII, c_ddummyIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_II(INDUCTIVE); \
    case hmac_item(pl_dummy_III, cl_dummy_III, pay_ddummyIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_II(INDUCTIVE); \
    case symmetric_encrypted_item(pl_dummy_III, cl_dummy_III, pay_ddummyIII, entIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_II(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_4(INDUCTIVE) \
  SWITCH_CRYPTO_PRIMITIVES_DOWN_IIII(INDUCTIVE, I, I) \


#define SWITCH_CRYPTO_PRIMITIVES_DOWN_IIII(INDUCTIVE, LEVEL, NESTED) \
  switch (INDUCTIVE) \
  { \
    case data_item(d_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case pair_item(first##NESTED, second##NESTED): return \
      SWITCH_CRYPTO_PRIMITIVES_DOWN_III(second##NESTED, LEVEL ## I, NESTED ## I); \
    case nonce_item(s_dummy##LEVEL, c_dummy##LEVEL, inc_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case public_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case private_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case hmac_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_encrypted_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL, ent##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_UP_IIII(INDUCTIVE) \
  switch (firstIII) \
  { \
    case data_item(d_ddummyIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_III(INDUCTIVE); \
    case pair_item(f_ddummyIIII, s_ddummyIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_III(INDUCTIVE); \
    case nonce_item(s_ddummyIIII, c_ddummyIIII, inc_ddummyIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_III(INDUCTIVE); \
    case symmetric_key_item(p_ddummyIIII, c_ddummyIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_III(INDUCTIVE); \
    case public_key_item(p_ddummyIIII, c_ddummyIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_III(INDUCTIVE); \
    case private_key_item(p_ddummyIIII, c_ddummyIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_III(INDUCTIVE); \
    case hmac_item(pl_dummy_IIII, cl_dummy_IIII, pay_ddummyIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_III(INDUCTIVE); \
    case symmetric_encrypted_item(pl_dummy_IIII, cl_dummy_IIII, pay_ddummyIIII, entIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_III(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_5(INDUCTIVE) \
  SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIII(INDUCTIVE, I, I) \


#define SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIII(INDUCTIVE, LEVEL, NESTED) \
  switch (INDUCTIVE) \
  { \
    case data_item(d_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case pair_item(first##NESTED, second##NESTED): return \
      SWITCH_CRYPTO_PRIMITIVES_DOWN_IIII(second##NESTED, LEVEL ## I, NESTED ## I); \
    case nonce_item(s_dummy##LEVEL, c_dummy##LEVEL, inc_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case public_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case private_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case hmac_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_encrypted_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL, ent##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_UP_IIIII(INDUCTIVE) \
  switch (firstIIII) \
  { \
    case data_item(d_ddummyIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIII(INDUCTIVE); \
    case pair_item(f_ddummyIIIII, s_ddummyIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIII(INDUCTIVE); \
    case nonce_item(s_ddummyIIIII, c_ddummyIIIII, inc_ddummyIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIII(INDUCTIVE); \
    case symmetric_key_item(p_ddummyIIIII, c_ddummyIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIII(INDUCTIVE); \
    case public_key_item(p_ddummyIIIII, c_ddummyIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIII(INDUCTIVE); \
    case private_key_item(p_ddummyIIIII, c_ddummyIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIII(INDUCTIVE); \
    case hmac_item(pl_dummy_IIIII, cl_dummy_IIIII, pay_ddummyIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIII(INDUCTIVE); \
    case symmetric_encrypted_item(pl_dummy_IIIII, cl_dummy_IIIII, pay_ddummyIIIII, entIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIII(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_6(INDUCTIVE) \
  SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIII(INDUCTIVE, I, I) \


#define SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIII(INDUCTIVE, LEVEL, NESTED) \
  switch (INDUCTIVE) \
  { \
    case data_item(d_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case pair_item(first##NESTED, second##NESTED): return \
      SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIII(second##NESTED, LEVEL ## I, NESTED ## I); \
    case nonce_item(s_dummy##LEVEL, c_dummy##LEVEL, inc_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case public_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case private_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case hmac_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_encrypted_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL, ent##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_UP_IIIIII(INDUCTIVE) \
  switch (firstIIIII) \
  { \
    case data_item(d_ddummyIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIII(INDUCTIVE); \
    case pair_item(f_ddummyIIIIII, s_ddummyIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIII(INDUCTIVE); \
    case nonce_item(s_ddummyIIIIII, c_ddummyIIIIII, inc_ddummyIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIII(INDUCTIVE); \
    case symmetric_key_item(p_ddummyIIIIII, c_ddummyIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIII(INDUCTIVE); \
    case public_key_item(p_ddummyIIIIII, c_ddummyIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIII(INDUCTIVE); \
    case private_key_item(p_ddummyIIIIII, c_ddummyIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIII(INDUCTIVE); \
    case hmac_item(pl_dummy_IIIIII, cl_dummy_IIIIII, pay_ddummyIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIII(INDUCTIVE); \
    case symmetric_encrypted_item(pl_dummy_IIIIII, cl_dummy_IIIIII, pay_ddummyIIIIII, entIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIII(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_7(INDUCTIVE) \
  SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIIII(INDUCTIVE, I, I) \


#define SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIIII(INDUCTIVE, LEVEL, NESTED) \
  switch (INDUCTIVE) \
  { \
    case data_item(d_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case pair_item(first##NESTED, second##NESTED): return \
      SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIII(second##NESTED, LEVEL ## I, NESTED ## I); \
    case nonce_item(s_dummy##LEVEL, c_dummy##LEVEL, inc_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case public_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case private_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case hmac_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_encrypted_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL, ent##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIII(INDUCTIVE) \
  switch (firstIIIIII) \
  { \
    case data_item(d_ddummyIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIII(INDUCTIVE); \
    case pair_item(f_ddummyIIIIIII, s_ddummyIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIII(INDUCTIVE); \
    case nonce_item(s_ddummyIIIIIII, c_ddummyIIIIIII, inc_ddummyIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIII(INDUCTIVE); \
    case symmetric_key_item(p_ddummyIIIIIII, c_ddummyIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIII(INDUCTIVE); \
    case public_key_item(p_ddummyIIIIIII, c_ddummyIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIII(INDUCTIVE); \
    case private_key_item(p_ddummyIIIIIII, c_ddummyIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIII(INDUCTIVE); \
    case hmac_item(pl_dummy_IIIIIII, cl_dummy_IIIIIII, pay_ddummyIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIII(INDUCTIVE); \
    case symmetric_encrypted_item(pl_dummy_IIIIIII, cl_dummy_IIIIIII, pay_ddummyIIIIIII, entIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIII(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_8(INDUCTIVE) \
  SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIIIII(INDUCTIVE, I, I) \


#define SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIIIII(INDUCTIVE, LEVEL, NESTED) \
  switch (INDUCTIVE) \
  { \
    case data_item(d_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case pair_item(first##NESTED, second##NESTED): return \
      SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIIII(second##NESTED, LEVEL ## I, NESTED ## I); \
    case nonce_item(s_dummy##LEVEL, c_dummy##LEVEL, inc_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case public_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case private_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case hmac_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_encrypted_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL, ent##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIII(INDUCTIVE) \
  switch (firstIIIIIII) \
  { \
    case data_item(d_ddummyIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIII(INDUCTIVE); \
    case pair_item(f_ddummyIIIIIIII, s_ddummyIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIII(INDUCTIVE); \
    case nonce_item(s_ddummyIIIIIIII, c_ddummyIIIIIIII, inc_ddummyIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIII(INDUCTIVE); \
    case symmetric_key_item(p_ddummyIIIIIIII, c_ddummyIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIII(INDUCTIVE); \
    case public_key_item(p_ddummyIIIIIIII, c_ddummyIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIII(INDUCTIVE); \
    case private_key_item(p_ddummyIIIIIIII, c_ddummyIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIII(INDUCTIVE); \
    case hmac_item(pl_dummy_IIIIIIII, cl_dummy_IIIIIIII, pay_ddummyIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIII(INDUCTIVE); \
    case symmetric_encrypted_item(pl_dummy_IIIIIIII, cl_dummy_IIIIIIII, pay_ddummyIIIIIIII, entIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIII(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_9(INDUCTIVE) \
  SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIIIIII(INDUCTIVE, I, I) \


#define SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIIIIII(INDUCTIVE, LEVEL, NESTED) \
  switch (INDUCTIVE) \
  { \
    case data_item(d_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case pair_item(first##NESTED, second##NESTED): return \
      SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIIIII(second##NESTED, LEVEL ## I, NESTED ## I); \
    case nonce_item(s_dummy##LEVEL, c_dummy##LEVEL, inc_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case public_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case private_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case hmac_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_encrypted_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL, ent##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIIII(INDUCTIVE) \
  switch (firstIIIIIIII) \
  { \
    case data_item(d_ddummyIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIII(INDUCTIVE); \
    case pair_item(f_ddummyIIIIIIIII, s_ddummyIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIII(INDUCTIVE); \
    case nonce_item(s_ddummyIIIIIIIII, c_ddummyIIIIIIIII, inc_ddummyIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIII(INDUCTIVE); \
    case symmetric_key_item(p_ddummyIIIIIIIII, c_ddummyIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIII(INDUCTIVE); \
    case public_key_item(p_ddummyIIIIIIIII, c_ddummyIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIII(INDUCTIVE); \
    case private_key_item(p_ddummyIIIIIIIII, c_ddummyIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIII(INDUCTIVE); \
    case hmac_item(pl_dummy_IIIIIIIII, cl_dummy_IIIIIIIII, pay_ddummyIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIII(INDUCTIVE); \
    case symmetric_encrypted_item(pl_dummy_IIIIIIIII, cl_dummy_IIIIIIIII, pay_ddummyIIIIIIIII, entIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIII(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_10(INDUCTIVE) \
  SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIIIIIII(INDUCTIVE, I, I) \


#define SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIIIIIII(INDUCTIVE, LEVEL, NESTED) \
  switch (INDUCTIVE) \
  { \
    case data_item(d_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case pair_item(first##NESTED, second##NESTED): return \
      SWITCH_CRYPTO_PRIMITIVES_DOWN_IIIIIIIII(second##NESTED, LEVEL ## I, NESTED ## I); \
    case nonce_item(s_dummy##LEVEL, c_dummy##LEVEL, inc_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case public_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case private_key_item(p_dummy##LEVEL, c_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case hmac_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
    case symmetric_encrypted_item(p_dummy##LEVEL, c_dummy##LEVEL, pay_dummy##LEVEL, ent##LEVEL): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_##NESTED(INDUCTIVE); \
  } \


#define SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIIIII(INDUCTIVE) \
  switch (firstIIIIIIIII) \
  { \
    case data_item(d_ddummyIIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIIII(INDUCTIVE); \
    case pair_item(f_ddummyIIIIIIIIII, s_ddummyIIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIIII(INDUCTIVE); \
    case nonce_item(s_ddummyIIIIIIIIII, c_ddummyIIIIIIIIII, inc_ddummyIIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIIII(INDUCTIVE); \
    case symmetric_key_item(p_ddummyIIIIIIIIII, c_ddummyIIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIIII(INDUCTIVE); \
    case public_key_item(p_ddummyIIIIIIIIII, c_ddummyIIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIIII(INDUCTIVE); \
    case private_key_item(p_ddummyIIIIIIIIII, c_ddummyIIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIIII(INDUCTIVE); \
    case hmac_item(pl_dummy_IIIIIIIIII, cl_dummy_IIIIIIIIII, pay_ddummyIIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIIII(INDUCTIVE); \
    case symmetric_encrypted_item(pl_dummy_IIIIIIIIII, cl_dummy_IIIIIIIIII, pay_ddummyIIIIIIIIII, entIIIIIIIIII): return \
      SWITCH_CRYPTO_PRIMITIVES_UP_IIIIIIIII(INDUCTIVE); \
  } \


#endif
