#ifndef PRINCIPALS_GH
#define PRINCIPALS_GH

require_module principals_mod;

predicate principals(int id);

predicate random_permission(int principal, int generated_values;);
predicate decryption_permission(int principal;);

predicate principal(int principal, int generated_values;) =
  random_permission(principal, generated_values) &*&
  decryption_permission(principal)
;

fixpoint bool bad(int principal);

lemma void principals_init();
  requires module(principals_mod, true);
  ensures  principals(0);

lemma void principals_exit();
  requires principals(_);
  ensures  true;

lemma int principal_create();
  requires principals(?count);
  ensures  principals(count + 1) &*& result == count + 1 &*&
           principal(count + 1, 0);

lemma void principal_destroy(int id);
  requires principal(id, _);
  ensures  true;

#endif
