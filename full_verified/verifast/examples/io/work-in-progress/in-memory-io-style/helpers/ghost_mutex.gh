#ifndef GHOST_MUTEX_GH
#define GHOST_MUTEX_GH

// Based on VeriFast's threading.h.

// TODO: do we need the id?

// TODO: this is unsound: you can acquire the mutex twice.

predicate ghost_mutex(int id; predicate() p);

lemma int create_ghost_mutex(predicate() p);
requires p();
ensures ghost_mutex(result, p);

typedef lemma void critical_section
  (predicate() p, predicate() pre, predicate() post)
  ();
requires p() &*& pre();
ensures p() &*& post();

lemma void ghost_mutex_use(int id, predicate() pre, predicate() post,
  critical_section *critical_section
);
requires
  ghost_mutex(id, ?p)
  &*& pre()
  &*& is_critical_section(critical_section, p, pre, post);
ensures p() &*& post();

#endif