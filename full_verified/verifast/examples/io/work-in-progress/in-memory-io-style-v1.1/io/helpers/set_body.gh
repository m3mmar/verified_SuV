#ifndef SET_BODY_GH
#define SET_BODY_GH

#include "set.gh"
#include <quantifiers.gh>

// Relation preserves set
fixpoint bool set_relation_preserves_set_instance<t>(
  fixpoint(pair<t, t>, bool) relation,
  fixpoint(t, bool) set,
  // --- curry here
  pair<t, t > t_pair
){
  return
    set(fst(t_pair)) && true==relation(t_pair) ?
      set(snd(t_pair))
    :
      true
  ;
}

fixpoint bool set_relation_preserves_set_fp<t>(
  fixpoint(fixpoint(pair<t, t>, bool), bool) forall,
  fixpoint(pair<t, t>, bool) relation,
  fixpoint(t, bool) set
) {
  return true==forall((set_relation_preserves_set_instance)(relation, set));
}

predicate set_relation_preserves_set<t>(fixpoint(pair<t, t>, bool) relation,
  fixpoint(t, bool) set
) =
  [_]is_forall_t<pair<t, t> >(?forall_t_pairs)
  &*& true==set_relation_preserves_set_fp(forall_t_pairs, relation, set);


#endif